plugins {
    id 'convention.localstack'
    id 'convention.lambda'
}


tasks.named('localstackUp'){
    dependsOn("zipLambda")
    doLast {
        println "[start] Localstack started from module-integration-test"
    }
}

tasks.named('createBucket'){
    dependsOn("localstackUp")
    doLast {
        println "[createBucket] create testbucket"
    }
}

tasks.named('createSqsUploadCallbackQueue'){
    dependsOn("createBucket")
    doLast {
        println "[createQueue] create uploadCallbackQueue"
    }
}

tasks.named('testDeployLambda'){
    dependsOn("createSqsUploadCallbackQueue")
    doLast {
        println "[deploy-lambda] started test lambda deploy "
    }
}

tasks.named('waitLambdaActive'){
    dependsOn("testDeployLambda")
    doLast {
        println "[wait Lambda Active]"
    }
}

tasks.named('mapSqsToLambda'){
    dependsOn("waitLambdaActive")
}


tasks.named('uploadDummyFile'){
    dependsOn("mapSqsToLambda")
    doLast {
        println "[uploadDummyFile] Dummy file upload "
    }
}

tasks.named('checkLambdaExecutionLogs'){
    dependsOn("uploadDummyFile")
}

tasks.register("integrationTest") {
    group = "integration-test"
    description = "전체 배포 자동화 실행"
    dependsOn("checkLambdaExecutionLogs")
}

tasks.named('localstackDown'){
    mustRunAfter("checkSqsMessage")
    doLast {
        println "[end] Localstack down from module-integration-test"
    }
}





