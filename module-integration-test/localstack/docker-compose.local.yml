# AWS 테스트를 위한 localstack 테스트환경 구축 컨테이너
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - localnet

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"       # 호스트에서 접근할 포트
      - "29092:29092"     # 내부 도커 네트워크에서 접근할 포트 (Lambda 등)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092, PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - localnet

  localstack:
    image: "localstack/localstack:3"
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3, sqs, lambda, logs
      - REGION=ap-northeast-2
      - LAMBDA_EXECUTOR=local
      - PORT_WEB_UI=8080
      - KINESIS_ERROR_PROBABILITY=0.25
    volumes:
      #- "${INIT_DIR}:/etc/localstack/init/ready.d"
      #- "${LAMBDA_DIR}:/etc/localstack/lambda"
      - "${ROOT_DIR}/module-lambda/build/lambda-zip:/var/task/lambda-zip"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - localnet

  spring-server:
    build:
      context: "${ROOT_DIR}"
      dockerfile: "${ROOT_DIR}/module-api/Dockerfile"
    container_name: spring-server
    ports:
      - "8080:8080"
    networks:
      - localnet
    depends_on:
      - localstack

networks:
  localnet: