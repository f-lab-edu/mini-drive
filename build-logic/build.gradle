// 프로젝트에 적용할 플러그인
plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.github.node-gradle.node' version '7.0.1'
}

// 프로젝트에서 사용할 의존성 원격저장소 정의
repositories {
    gradlePluginPortal()
    mavenCentral()
}

// 컨벤션 플러그인을 gradle 플러그인으로 등록
gradlePlugin {
    plugins {

        springbootStarterConvention {
            id = 'convention.spring-boot-starter'
            implementationClass = "SpringBootStarterConventionPlugin"
        }

        springbootWebConvention {
            id = 'convention.spring-boot-web'
            implementationClass = "SpringBootWebConventionPlugin"
        }

        awsS3Convention {
            id = 'convention.aws-s3'
            implementationClass = "AwsS3ConventionPlugin"
        }

        kafkaConvention {
            id = "convention.kafka"
            implementationClass = "KafkaConventionPlugin"
        }

        localstackConvention {
            id = "convention.localstack"
            implementationClass = "LocalstackConventionPlugin"
        }

        lambdaConvention {
            id = "convention.lambda"
            implementationClass = "LambdaConventionPlugin"
        }

        testContainersConvention {
            id = "convention.test-container"
            implementationClass = "TestcontainersConventionPlugin"
        }

        javaComonConvention {
            id = "convention.java-common"
            implementationClass = "JavaCommonConventionPlugin"
        }

        springBootDomainConvention {
            id = "convention.spring-boot-domain"
            implementationClass = "SpringBootDomainConventionPlugin"
        }

        springBomConvention {
            id = "convention.spring-bom"
            implementationClass = "SpringBomConventionPlugin"
        }
    }
}

// 프로젝트가 의존하는 라이브러리들 선언
dependencies {
    implementation gradleApi()
    implementation localGroovy()

    // 플러그인이 동작하게 하기위한 코드 리소스
    implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.2.5'
    implementation 'com.github.node-gradle:gradle-node-plugin:7.0.1'
}
